name: Workflow for DB 
on:
  pull_request:
    types:
      - closed

jobs:
  after_merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
        - name: Check out repository code
          uses: actions/checkout@v4
        - name: Authenticate gcloud
          id: auth 
          uses: google-github-actions/auth@v2
          with:
            credentials_json: "${{ secrets.SERVICE_ACCOUNT_JSON}}"
        - name: Setup gcloud 
          uses: google-github-actions/setup-gcloud@v2
        - name: gcloud CLI
          run: gcloud info
        - name: Fetch Secrets
          run: |
            echo "csye6225-1712777071" > imagename.txt
            echo "DB_HOST=$(echo $(gcloud secrets versions access latest --secret='db_host') )" >> $GITHUB_ENV
            echo "DB_NAME=$(echo $(gcloud secrets versions access latest --secret='db_name') )" >> $GITHUB_ENV
            echo "DB_PASSWORD=$(echo $(gcloud secrets versions access latest --secret='db-password') )" >> $GITHUB_ENV
            echo "DB_USER=$(echo $(gcloud secrets versions access latest --secret='db_username') )" >> $GITHUB_ENV
            echo "KMS_KEY_SELF_LINK=$(echo $(gcloud secrets versions access latest --secret='kms_key') )" >> $GITHUB_ENV
            echo "SERVICE_ACCOUNT_EMAIL=$(echo $(gcloud secrets versions access latest --secret='service_account_email') )" >> $GITHUB_ENV
            echo "image_name=$(cat imagename.txt)" >> $GITHUB_ENV
        - name: Create Instance Template
          run: |
              TIMESTAMP=$(date +"%Y%m%d%H%M%S") 

              TEMPLATE_NAME="csye6225-custom-instance-$TIMESTAMP"
              echo "TEMPLATE_NAME=$TEMPLATE_NAME" >> $GITHUB_ENV
              gcloud compute instance-templates create $TEMPLATE_NAME \
              --machine-type=e2-standard-2 \
              --image=$image_name \
              --subnet=webapp \
              --region=us-east1 \
              --service-account=$SERVICE_ACCOUNT_EMAIL \
              --scopes=https://www.googleapis.com/auth/cloud-platform \
              --metadata=db-user=$DB_USER,db-name=$DB_NAME,db-host=$DB_HOST,db-pass=$DB_PASSWORD,startup-script="${{secrets.ENVIRONMENTFILE}}" \
              --boot-disk-type=pd-balanced \
              --boot-disk-kms-key=$KMS_KEY_SELF_LINK

        - name: Configure MIG
          run: |
                  gcloud compute instance-groups managed set-instance-template $INSTANCE_GROUP_NAME \
                  --template=projects/${{ secrets.PROJECT_ID }}/regions/${{ secrets.REGION }}/instanceTemplates/$TEMPLATE_NAME \ 
                  --region=${{secrets.REGION}}
          env:
                  INSTANCE_GROUP_NAME: webapp-igm
                  YOUR_ZONE: us-east1-c
        - name: Rolling Update
          run: gcloud compute instance-groups managed rolling-action start-update $INSTANCE_GROUP_NAME \
              --version template= --template=projects/${{ secrets.PROJECT_ID }}/regions/${{ secrets.REGION }}/instanceTemplates/$TEMPLATE_NAME \ 
              --region=${{ secrets.REGION }} \
              --type=${{ secrets.ROLLING_TYPE }} \
              --max-surge=3 \
              --max-unavailable=0   
          env:
            INSTANCE_GROUP_NAME: webapp-igm 
        - name: Wait for Refresh
          run: |
            gcloud compute instance-groups managed wait-until $secrets.INSTANCE_GROUP_NAME  \
            --version-target-reached \
            --region=${{ secrets.REGION }}
          env:
            INSTANCE_GROUP_NAME: webapp-igm
               
  
  
            
      